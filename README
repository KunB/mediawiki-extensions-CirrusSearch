MediaWiki extension: CirrusSearch
---------------------------------


Installation
------------
Fetch this plugin plugin into your extensions directory.
Make sure you have the curl php library installed (sudo apt-get install php5-curl in Debian.)
Add this to LocalSettings.php:
 require_once( "$IP/extensions/CirrusSearch/CirrusSearch.php" );
 $wgDisableSearchUpdate = true;

Configure your search servers in LocalSettings.php:
 $wgCirrusSearchServers = array( 'elasticsearch0', 'elasticsearch1', 'elasticsearch2', 'elasticsearch3' );
There are other $wgCirrusSearch variables that you might want to change from their defaults.
If you want to change them then set their new values with $wgCirrusSearchServers in LocalSettings.php.

Now run this script to generate your elasticsearch index:
 php maintenance/updateSearchConfig.php

Now remove $wgDisableSearchUpdate = true from LocalSettings.php.  Updates should start heading to elasticsearch.

Next bootstrap the search index by running:
 php maintenance/forceSearchIndex.php
Note that this can take some time.  For large wikis read Bootstrapping large wikis below.

Once that is complete add this to LocalSettings.php to funnel queries to Solr:
 $wgSearchType = 'CirrusSearch';


Bootstrapping large wikis
-------------------------
The --batch-size parameter controls the number documents read from MySQL and inserted into
elasticsearch at one time.  It defaults to 500 but you should feel free to play with it.

forceSeachIndex.php accepts the --fromId and --toId parameters which can be used to split up the
work of bootstrapping the wiki into multiple processes.  Since most of the load on search indexing is on the
indexing script in the php process you should be able to break the process into multiple chunks and farm
them out to multiple php processes/machines.  The --buildChunks argument of forceSearchIndex.php will cause
the script to build invocations of itself that you can splay out to different processes.  For example:
 rm -rf /tmp/index_log
 mkdir /tmp/index_log
 php forceSearchIndex.php --buildChunks 10 --batch-size 50 |
   xargs -I{} -t -P4 sh -c 'php {} > /tmp/index_log/$$.log'


Handling elasticsearch outages
------------------------------
If for some reason in process updates to elasticsearch begin failing you can immediately
set "$wgDisableSearchUpdate = true;" in your LocalSettings.php file to
stop trying to update elasticsearch.  Once you figure out what is wrong with elasticsearch you
should turn those updates back on and then run the following:
php maintenance/forceSearchIndex.php --from <whenever the outage started in ISO 8601 format> --deletes
php maintenance/forceSearchIndex.php --from <whenever the outage started in ISO 8601 format>

The first command picks up all the deletes that occurred during the outage and
should complete quite quickly.  The second command picks up all the updates
that occurred during the outage and might take significantly longer.


PoolCounter
-----------
CirrusSearch can leverage the PoolCounter extension to limit the number of concurrent requests to
elasticsearch.  You can do this by installing the PoolCounter extension and then configuring it in
LocalSettings.php like so:
 require_once( "$IP/extensions/PoolCounter/PoolCounterClient.php");
 $wgPoolCounterConf = array(
	'CirrusSearch-Update' => array(  // Configuration for all index updates not run by maintenance scripts
		'class' => 'PoolCounter_Client',
		'timeout' => 120,
		'workers' => 20,
		'maxqueue' => 200,
	),
	'CirrusSearch-Search' => array(  // Configuration for all searches
		'class' => 'PoolCounter_Client',
		'timeout' => 30,
		'workers' => 50,
		'maxqueue' => 10,
	)
 );


Submodule
---------
CirrusSearch includes the Elastica library as a git submodule.  If you clone this repository you'll need to:
 git submodule init
 git submodule update
to drop Elastica into place correctly.


Licensing information
---------------------
CirrusSearch makes use of the Elastica library to connect to elasticsearch <http://elastica.io/>.
It is Apache licensed and you can read the license Elastica/LICENSE.txt.
